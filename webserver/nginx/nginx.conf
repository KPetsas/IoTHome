load_module /usr/lib/nginx/modules/ngx_stream_module.so;

events { }

stream {
  upstream mqtt {
    server 192.168.1.50:8883;
  }

  server {
    listen 8883;
    proxy_pass mqtt;
  }
}

http {

  upstream flask {
    server iot_backend_mqtt:9191;
  }

  map $http_upgrade $connection_upgrade {
      default upgrade;
      ''      close;
  }

  # Helps in loading the CSS and images.
  include /etc/nginx/mime.types;

  # Balena offers https in PUBLIC URL and communicates safely through VPN in port 80, so no need to redirect to https.
  server {
    listen 80;
    server_name *.balena-devices.com;

    # serve the static files
    location / {
      root /usr/share/nginx/html;
      # forward requests to index.html to fix 404 when using React router dom.
      try_files $uri /index.html;
    }

    # fetch data from proxied server when /api is called
    location /api {
      # Gunicorn config.
      proxy_pass http://flask;
    }

    location /api/registration {
      deny  all;  # deny access from everywhere.
    }
  }

  # Redirect http to https
  server {
    listen 80;
    server_name 192.168.1.50;
    return 301 https://192.168.1.50$request_uri;
  }

  # read the ssl certificate / key when listening on https
  server {
    listen 443 ssl;
    server_name 192.168.1.50;

    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    access_log /var/log/nginx_access.log;
    error_log /var/log/nginx_error.log;

    # serve the static files
    location / {
      root /usr/share/nginx/html;
      # forward requests to index.html to fix 404 when using React router dom.
      try_files $uri /index.html;
    }

    # fetch data from proxied server when /api is called
    location /api {
      # Gunicorn config.
      proxy_pass http://flask;
    }

    # Create users only from local device.
    location /api/registration {
      allow 127.0.0.1;   # permit access from localhost
      deny  all;         # deny access from everywhere else

      # Gunicorn config.
      proxy_pass http://flask;
    }
  }
}
